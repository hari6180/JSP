/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.41
 * Generated at: 2021-01-18 07:26:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp._04_005fget;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import study.helloweb.model.Department;

public final class department_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("study.helloweb.model.Department");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;


	request.setCharacterEncoding("UTF-8");				// 파라미터 수신에 사용할 문자셋 설정 (각 페이지당 최상단에서 1회 설정)
	String deptno = request.getParameter("deptno");		// 링크를 통해 전달된 파라미터 추출
	Department department = null;						// 수신된 deptno 값에 따라서 결과를 저장할 객체
	
	if (deptno != null) {								// 파라미터가 없는 경우를 대비해야 하므로 deptno값이 null이 아닌 경우만 수행
		department = new Department();					// 데이터를 저장할 객체를 할당한다.
		
		if (deptno.equals("101")) {						// deptno가 정해진 범위 안에서만 동작하도록 if문을 구성.
			department.setDeptno(101);
			department.setDname("컴퓨터공학과");
			department.setLoc("1호관");
		} else if (deptno.equals("102")) {
			department.setDeptno(102);
			department.setDname("멀티미디어학과");
			department.setLoc("2호관");
		} else if (deptno.equals("201")) {
			department.setDeptno(201);
			department.setDname("전자공학과");
			department.setLoc("3호관");
		} else if (deptno.equals("202")) {
			department.setDeptno(202);
			department.setDname("기계공학과");
			department.setLoc("4호관");
		}
	}

      out.write("<!doctype html>\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\" />\r\n");
      out.write("    <title>Hello JSP</title>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("    <h1>학과정보</h1>\r\n");
      out.write("    \r\n");
      out.write("    <!-- 메뉴 제시 영역 -->\r\n");
      out.write("    <a href=\"");
      out.print(request.getContextPath());
      out.write("/04_get/department.jsp?deptno=101\">컴퓨터공학과</a> |\r\n");
      out.write("    <a href=\"");
      out.print(request.getContextPath());
      out.write("/04_get/department.jsp?deptno=102\">멀티미디어학과</a> |\r\n");
      out.write("    <a href=\"");
      out.print(request.getContextPath());
      out.write("/04_get/department.jsp?deptno=201\">전자공학과</a> |\r\n");
      out.write("    <a href=\"");
      out.print(request.getContextPath());
      out.write("/04_get/department.jsp?deptno=202\">기계공학과</a> \r\n");
      out.write("    <hr />\r\n");
      out.write("    \r\n");
      out.write("    <!-- 결과표시 영역 -->\r\n");
      out.write("    ");
 if(department == null) { 
      out.write("<h2>메뉴를 선택하세요</h2>\r\n");
      out.write("    ");
 } else { 
      out.write("<table>\r\n");
      out.write("    \t<tr>\r\n");
      out.write("    \t\t<th>학과번호</th>\r\n");
      out.write("    \t\t<td>");
      out.print(department.getDeptno());
      out.write("</td>\r\n");
      out.write("    \t</tr>\r\n");
      out.write("    \t<tr>\r\n");
      out.write("    \t\t<th>학과이름</th>\r\n");
      out.write("    \t\t<td>");
      out.print(department.getDname());
      out.write("</td>\r\n");
      out.write("    \t</tr>\r\n");
      out.write("    \t<tr>\r\n");
      out.write("    \t\t<th>학과위치</th>\r\n");
      out.write("    \t\t<td>");
      out.print(department.getLoc());
      out.write("</td>\r\n");
      out.write("    \t</tr>\r\n");
      out.write("    </table>\r\n");
      out.write("    ");
 } // end if 
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
